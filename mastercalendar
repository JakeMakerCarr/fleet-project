<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Master Fleet Calendar Overview</title>
  <meta name="viewport" content="width=device-width,initial-scale=1.0" />

  <!-- FullCalendar CSS -->
  <link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.9.0/main.min.css" rel="stylesheet">

  <!-- jQuery -->
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

  <!-- External Styles -->
  <link rel="stylesheet" href="style.css">

  <style>
    body {
      margin: 0; padding: 0;
      font-family: sans-serif;
      background-color: #f0f0f0;
    }
    header {
      background: #333; color: white;
      display: flex; justify-content: space-between; align-items: center;
      padding: 1rem;
    }
    #user-info { margin-right: 1rem; }
    #logout-btn {
      cursor: pointer; padding: 0.5rem 1rem; border: none;
      background: #666; color: white; border-radius: 4px;
    }
    .container {
      max-width: 1200px; margin: 2rem auto; background: white; padding: 2rem;
      border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }
    h2 { text-align: center; margin-top: 0; }
    #calendar {
      margin-top: 2rem;
    }
  </style>
</head>
<body>

<header>
  <div>Master Fleet Calendar</div>
  <div id="user-info">Checking auth...</div>
  <button id="logout-btn" style="display:none;">Logout</button>
</header>

<div class="container">
  <h2>All Vehicle Bookings</h2>
  <div id="calendar"></div>
</div>

<!-- FullCalendar JS -->
<script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.9.0/main.min.js"></script>

<!-- Firebase Scripts -->
<script type="module">
  import { initializeApp } from 'https://www.gstatic.com/firebasejs/10.12.5/firebase-app.js';
  import { getAuth, onAuthStateChanged, signOut } from 'https://www.gstatic.com/firebasejs/10.12.5/firebase-auth.js';
  import { getDatabase, ref, get } from 'https://www.gstatic.com/firebasejs/10.12.5/firebase-database.js';

  const firebaseConfig = {
    apiKey: "AIzaSyAjnCWLnUf8msIUjL0TBdZ1eCAiXMLOwvU",
    authDomain: "yfned-fleet-nfc.firebaseapp.com",
    databaseURL: "https://yfned-fleet-nfc-default-rtdb.firebaseio.com",
    projectId: "yfned-fleet-nfc",
    storageBucket: "yfned-fleet-nfc.appspot.com",
    messagingSenderId: "482363667898",
    appId: "1:482363667898:web:4b0364e891a221e9631983",
    measurementId: "G-LK66DQVKW4"
  };

  const app = initializeApp(firebaseConfig);
  const auth = getAuth(app);
  const db = getDatabase(app);

  let calendar = null;

  const userInfo = document.getElementById('user-info');
  const logoutBtn = document.getElementById('logout-btn');

  onAuthStateChanged(auth, (user) => {
    if (!user) {
      window.location.href = 'index.html';
    } else {
      userInfo.textContent = 'Logged in as: ' + user.email;
      logoutBtn.style.display = 'inline-block';
      initCalendar();
    }
  });

  logoutBtn.addEventListener('click', async () => {
    await signOut(auth);
  });

  function initCalendar() {
    const calendarEl = document.getElementById('calendar');
    calendar = new FullCalendar.Calendar(calendarEl, {
      initialView: 'dayGridMonth',
      timeZone: 'local',
      events: fetchAllVehicleBookings,
      displayEventTime: false,
      eventClick: (info) => {
        const { user, vehicle } = info.event.extendedProps;
        alert(`${vehicle}\nUser: ${user}\nStart: ${info.event.start}\nEnd: ${info.event.end}`);
      }
    });
    calendar.render();
  }

  async function fetchAllVehicleBookings(info, successCallback, failureCallback) {
    try {
      const bookingsRef = ref(db, 'bookings');
      const snap = await get(bookingsRef);
      if (!snap.exists()) {
        successCallback([]);
        return;
      }

      const bookingsData = snap.val();
      const events = [];

      for (const vehicleName in bookingsData) {
        const vehicleBookings = bookingsData[vehicleName];
        for (const bookingId in vehicleBookings) {
          const b = vehicleBookings[bookingId];
          events.push({
            id: `${vehicleName}-${bookingId}`,
            title: `${vehicleName}: ${b.startTime} - ${b.endTime}`,
            start: new Date(b.startTimeISO),
            end: new Date(b.endTimeISO),
            extendedProps: {
              user: b.userName,
              vehicle: vehicleName
            }
          });
        }
      }

      successCallback(events);
    } catch (err) {
      console.error(err);
      failureCallback(err);
    }
  }
</script>

</body>
</html>
